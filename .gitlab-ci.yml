workflow:
  rules: 
    # - if: $CI_COMMIT_BRANCH != "main" && $CI_PIPELINE_SOURCE != "merge_request_event"
      # when: never
    # - when: always
    - when: never
image: alpine:3.15.1
stages:
  - test
  - build
  - deploy

variables:
  IMAGE_NAME: $CI_REGISTRY_IMAGE/microservice/$MICRO_SERVICE
  IMAGE_TAG: "1.0"
  DEV_SERVER_HOST: "ec2-44-200-125-244.compute-1.amazonaws.com"
run_unit_tests:
  image: node:16.13.0
  tags:
    - "local"
    - "macos"
  stage: test
  before_script:
    - ls
    - yarn
  script:
    - yarn test:all
  after_script:
    - yarn merge-reports
  artifacts:
    when: always
    reports:
      junit: junit.xml

build_image:
  stage: build
  tags:
    - "local"
    - "macos"
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .

push_image: 
  stage: build
  needs:
    - build_image
  tags:
    - "local"
    - "macos"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker push $IMAGE_NAME:$IMAGE_TAG


deploy_to_dev: 
  stage: deploy
  tags: 
    - "local"
    - "macos"
  before_script:
    - chmod 400 $SSH_PRIVATE_KEY
  script:
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY  ubuntu@$DEV_SERVER_HOST "
      docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY && 
      docker run -d -p 3000:3000 $IMAGE_NAME:$IMAGE_TAG"


